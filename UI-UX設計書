ストップウォッチアプリ UI/UX設計書 (MVP版)
1. 全体的なUXコンセプト
1.1 デザイン原則
シンプル第一: 高校生が疲れた夜でも直感的に操作できる。
視覚的フィードバック: 計測中の状態が一目で分かる。
効率重視: 最小限のタップで目的を達成。
モチベーション向上: 達成感を感じられるビジュアル。
1.2 カラーパレット
プライマリブルー: #2563EB（メインアクション）
ライトブルー: #DBEAFE（背景、非アクティブ状態）
アクセントグリーン: #10B981（成功、完了）
グレー: #6B7280（テキスト、補助情報）
ホワイト: #FFFFFF（背景）

2. 画面設計詳細 (MVPスコープ)
2.1 タイマー画面（メイン画面）レイアウト構成
┌─────────────────────────┐
├─────────────────────────┤
│                         │
│   [タイマー名入力欄]     │ ← 大きく見やすく
│                         │
│      00:15:42           │ ← 大型デジタル表示
│                         │
│                         │
│                         │
│  [  スタート  ]          │ ← 大きなボタン
│                         │
│ [ストップ] [リセット]     │ ← 計測中のみ表示
│                         │
│ 今日: 2時間30分          │ ← 今日の累計（モチベーション）
└─────────────────────────┘
操作フロー
初期状態: タイマー名入力欄にフォーカス（またはプレースホルダー表示）、スタートボタンのみ表示。
計測中: 時間が大きく表示、ストップ・リセットボタン出現。
停止時: 自動で記録入力画面へ遷移する（この動作はMVPの基本とするか、設定で変更可能にするかは別途検討）。
インタラクション詳細タイマー名: プレースホルダー「例：数学の勉強」を表示。ユーザーが入力可能。
時間表示: 00:00:00形式、1秒ごとに更新。
累計表示: 今日の合計活動時間を表示し、モチベーション維持をサポート。

2.2 記録入力画面レイアウト構成
┌─────────────────────────┐
│ [←] 記録を保存          │
├─────────────────────────┤
│                         │
│ 計測時間: 00:15:42      │ ← 結果表示
│                         │
│ タイマー名               │
│ [数学の勉強          ]  │ ← 編集可能
│                         │
│ カテゴリ                │
│ [勉強 ▼]               │ ← ドロップダウン
│ + 新しいカテゴリ        │
│                         │
│ タグ (最大3つ)          │
│ [数学] [×] [二次関数] [×] │ ← チップ形式
│ [+ タグを追加]          │
│                         │
│                         │
│     [保存して完了]       │ ← メインアクション
│     [破棄]             │ ← 副アクション
└─────────────────────────┘
操作フロー自動遷移: タイマー停止後にこの画面へ自動遷移することを基本とする。
クイック保存: 最小限の入力（タイマー名、カテゴリ）で保存可能にする。タグは任意。
インタラクション詳細カテゴリ選択: 過去に使用したカテゴリを優先的に表示する（MVPではまずシンプルなリスト表示から）。
新しいカテゴリ名は自由入力で作成可能とする。
タグ入力: 自由テキスト入力。入力されたタグはチップ形式で表示。各タグに削除ボタン（[×]）を設置。オートコンプリート機能はMVPスコープ外。
バリデーション: タイマー名は必須。カテゴリも選択必須とする。タグは任意。

2.3 記録一覧画面レイアウト構成
┌─────────────────────────┐
│ [←] 記録一覧    [🔍]    │
├─────────────────────────┤
│ [今日] [今週] [全て]    │ ← フィルタータブ
│                         │
│ ┌─────────────────────┐ │
│ │ 数学の勉強  📚勉強   │ │ ← カードデザイン
│ │ #数学 #二次関数      │ │
│ │ 15分42秒  14:30開始  │ │
│ └─────────────────────┘ │
│                         │
│ ┌─────────────────────┐ │
│ │ ランニング  🏃運動   │ │
│ │ #有酸素 #朝活       │ │
│ │ 30分00秒  06:00開始  │ │
│ └─────────────────────┘ │
│                         │
│ 今日の合計: 2時間15分    │ ← 集計情報
└─────────────────────────┘
補足: フィルタータブ（[今日] [今週] [全て]）と検索機能（[🔍]）は、MVPではまず「全て」表示のみとし、段階的に追加することを検討します。
操作フロー時系列表示: 最新の記録から降順で表示。
カテゴリ識別: アイコンや色でカテゴリを視覚的に区別しやすくする。
詳細表示: カードをタップすると、記録の詳細確認や編集・削除ができる画面へ遷移（MVPではまず詳細確認、削除機能を優先）。

2.4 グラフ表示画面レイアウト構成
┌─────────────────────────┐
│ [←] 統計・グラフ        │
├─────────────────────────┤
│ [カテゴリ別] [タグ別]   │ ← 切り替えタブ
│                         │
│ ┌─────────────────────┐ │
│ │     📊 全期間の統計   │ │
│ │                     │ │
│ │ ████████ 勉強 8h    │ │ ← 横棒グラフ
│ │ ████ 運動 3h        │ │
│ │ ██ 読書 1h          │ │
│ │                     │ │
│ └─────────────────────┘ │
│                         │
│ 💡 今週は合計12時間活動！ │ ← 固定メッセージ（例）
│   目標まであと少し！     │
│                         │
│                         │ ← 「期間変更」はMVPでは「全期間」固定
└─────────────────────────┘
補足: 「インサイト」はMVP段階では、計測時間などを活用した固定メッセージ（例：「今週は合計XX時間活動しました！素晴らしいです！」、「XXカテゴリの活動がYY時間増えましたね！」など数パターン）を表示します。「期間変更」機能はMVPでは「全期間」のグラフ表示を基本とします。
インタラクション詳細アニメーション: グラフ描画時にスムーズなアニメーションを適用し、視覚的な楽しさを提供。
表示対象: カテゴリ別合計時間、タグ別合計時間。
集計期間: 全期間のデータを表示（MVPスコープ）。

3. ナビゲーション設計 (MVPスコープ)
3.1 画面遷移図 (主要フロー)graph TD
    A[タイマー画面] -->|計測停止| B(記録入力画面);
    B -->|保存| C[記録一覧画面];
    A <--> C;
    A <--> D[グラフ表示画面];
    C <--> D;
3.2 ボトムナビゲーション (またはハンバーガーメニュー)
タイマー (🕐): メインのタイマー画面へ。
記録 (📝): 記録一覧画面へ。
統計 (📊): グラフ表示画面へ。
補足: 「設定」はMVPの機能がシンプルなため、初期リリースではボトムナビゲーションに含めず、必要に応じて将来追加を検討。

4. マイクロインタラクション (MVPスコープ)
4.1 フィードバックボタンタップ: 軽い振動（対応デバイスのみ）または視覚的なフィードバック（色変化など）。
時間更新: 数字のフェード切り替えなどでスムーズな印象に。
記録保存: 成功を示すシンプルなアニメーションまたはトーストメッセージ。
データロード: 標準的なローディングインジケーターを表示。
4.2 状態表示計測中: タイマー表示部分にパルスアニメーションや色の変化で状態を明示。
一時停止: （もし一時停止機能をMVPに含める場合）点滅表示などで区別。
完了/保存: チェックマークアニメーションやメッセージでフィードバック。

5. レスポンシブ対応
5.1 画面サイズ対応
スマートフォン縦: メインのターゲットとし、最適化（例：iPhone 14サイズ基準）。
スマートフォン横: MVPでは縦向き表示を基本とし、横向き対応は将来検討。
タブレット: MVPではスマートフォン版の拡大表示を基本とし、専用レイアウトは将来検討。
5.2 アクセシビリティ
フォントサイズ: システム設定にある程度追従できるように配慮。
コントラスト: WCAG 2.1 AA準拠を目指す。
音声読み上げ: 主要な要素（ボタン、時間表示など）に適切なラベルを設定し、VoiceOverなどの読み上げ機能に対応。

6. パフォーマンス考慮 (MVPスコープ)
6.1 データ管理
ローカルストレージ: 計測データはデバイスのローカルストレージに保存し、即座にアクセス可能にする。クラウド同期はMVPスコープ外。
データ量: 大量の記録が保存された場合でも、一覧表示やグラフ描画がスムーズに行えるよう配慮（例：ページネーションや仮想スクロールは将来検討、MVPではまず基本的なリスト表示）。
6.2 バッテリー配慮
バックグラウンド処理: アプリがバックグラウンドに移行した場合のタイマー計測の挙動を明確にし、不要なバッテリー消費を抑える。
画面表示: 計測中に画面が常に点灯するオプションはMVPでは含めず、OSの標準動作に従う。